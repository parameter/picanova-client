/**
 * Picanova API
 * Picanova API documentation
 *
 * OpenAPI spec version: 
 * Contact: apirequest@picanova.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2001Data', 'model/InlineResponse2002', 'model/InlineResponse2002Data', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse2005', 'model/InlineResponse2005Data', 'model/InlineResponse2006', 'model/InlineResponse2006Data', 'model/InlineResponse2007', 'model/InlineResponse2007Data', 'model/InlineResponse2008', 'model/InlineResponse2008Data', 'model/InlineResponse200Data', 'model/OrderPost', 'model/OrderPostItems', 'model/OrderPostOptions', 'model/OrderPostShipping', 'model/ShippingItem', 'model/ShippingPost', 'model/ShippingPostShipping', 'model/SingleOrder', 'model/SingleOrderCreatedAt', 'model/SingleOrderItems', 'model/SingleOrderOptions', 'model/SingleOrderPriceDetails', 'model/SingleOrderShippingMethod', 'model/SingleOrderTotals', 'model/SingleOrderTotalsCustomsShippingCostsDetails', 'model/SingleOrderTotalsShippingAmountDetails', 'model/SingleOrderTotalsTotalAmountDetails', 'model/SingleOrderValue', 'api/CountryApi', 'api/OrdersApi', 'api/ProductsApi', 'api/RegionApi', 'api/ShippingApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2001Data'), require('./model/InlineResponse2002'), require('./model/InlineResponse2002Data'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse2005'), require('./model/InlineResponse2005Data'), require('./model/InlineResponse2006'), require('./model/InlineResponse2006Data'), require('./model/InlineResponse2007'), require('./model/InlineResponse2007Data'), require('./model/InlineResponse2008'), require('./model/InlineResponse2008Data'), require('./model/InlineResponse200Data'), require('./model/OrderPost'), require('./model/OrderPostItems'), require('./model/OrderPostOptions'), require('./model/OrderPostShipping'), require('./model/ShippingItem'), require('./model/ShippingPost'), require('./model/ShippingPostShipping'), require('./model/SingleOrder'), require('./model/SingleOrderCreatedAt'), require('./model/SingleOrderItems'), require('./model/SingleOrderOptions'), require('./model/SingleOrderPriceDetails'), require('./model/SingleOrderShippingMethod'), require('./model/SingleOrderTotals'), require('./model/SingleOrderTotalsCustomsShippingCostsDetails'), require('./model/SingleOrderTotalsShippingAmountDetails'), require('./model/SingleOrderTotalsTotalAmountDetails'), require('./model/SingleOrderValue'), require('./api/CountryApi'), require('./api/OrdersApi'), require('./api/ProductsApi'), require('./api/RegionApi'), require('./api/ShippingApi'));
  }
}(function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse2001Data, InlineResponse2002, InlineResponse2002Data, InlineResponse2003, InlineResponse2004, InlineResponse2005, InlineResponse2005Data, InlineResponse2006, InlineResponse2006Data, InlineResponse2007, InlineResponse2007Data, InlineResponse2008, InlineResponse2008Data, InlineResponse200Data, OrderPost, OrderPostItems, OrderPostOptions, OrderPostShipping, ShippingItem, ShippingPost, ShippingPostShipping, SingleOrder, SingleOrderCreatedAt, SingleOrderItems, SingleOrderOptions, SingleOrderPriceDetails, SingleOrderShippingMethod, SingleOrderTotals, SingleOrderTotalsCustomsShippingCostsDetails, SingleOrderTotalsShippingAmountDetails, SingleOrderTotalsTotalAmountDetails, SingleOrderValue, CountryApi, OrdersApi, ProductsApi, RegionApi, ShippingApi) {
  'use strict';

  /**
   * Picanova_API_documentation.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PicanovaApi = require('index'); // See note below*.
   * var xxxSvc = new PicanovaApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PicanovaApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PicanovaApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PicanovaApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2001Data model constructor.
     * @property {module:model/InlineResponse2001Data}
     */
    InlineResponse2001Data: InlineResponse2001Data,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2002Data model constructor.
     * @property {module:model/InlineResponse2002Data}
     */
    InlineResponse2002Data: InlineResponse2002Data,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse2005Data model constructor.
     * @property {module:model/InlineResponse2005Data}
     */
    InlineResponse2005Data: InlineResponse2005Data,
    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006: InlineResponse2006,
    /**
     * The InlineResponse2006Data model constructor.
     * @property {module:model/InlineResponse2006Data}
     */
    InlineResponse2006Data: InlineResponse2006Data,
    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007: InlineResponse2007,
    /**
     * The InlineResponse2007Data model constructor.
     * @property {module:model/InlineResponse2007Data}
     */
    InlineResponse2007Data: InlineResponse2007Data,
    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008: InlineResponse2008,
    /**
     * The InlineResponse2008Data model constructor.
     * @property {module:model/InlineResponse2008Data}
     */
    InlineResponse2008Data: InlineResponse2008Data,
    /**
     * The InlineResponse200Data model constructor.
     * @property {module:model/InlineResponse200Data}
     */
    InlineResponse200Data: InlineResponse200Data,
    /**
     * The OrderPost model constructor.
     * @property {module:model/OrderPost}
     */
    OrderPost: OrderPost,
    /**
     * The OrderPostItems model constructor.
     * @property {module:model/OrderPostItems}
     */
    OrderPostItems: OrderPostItems,
    /**
     * The OrderPostOptions model constructor.
     * @property {module:model/OrderPostOptions}
     */
    OrderPostOptions: OrderPostOptions,
    /**
     * The OrderPostShipping model constructor.
     * @property {module:model/OrderPostShipping}
     */
    OrderPostShipping: OrderPostShipping,
    /**
     * The ShippingItem model constructor.
     * @property {module:model/ShippingItem}
     */
    ShippingItem: ShippingItem,
    /**
     * The ShippingPost model constructor.
     * @property {module:model/ShippingPost}
     */
    ShippingPost: ShippingPost,
    /**
     * The ShippingPostShipping model constructor.
     * @property {module:model/ShippingPostShipping}
     */
    ShippingPostShipping: ShippingPostShipping,
    /**
     * The SingleOrder model constructor.
     * @property {module:model/SingleOrder}
     */
    SingleOrder: SingleOrder,
    /**
     * The SingleOrderCreatedAt model constructor.
     * @property {module:model/SingleOrderCreatedAt}
     */
    SingleOrderCreatedAt: SingleOrderCreatedAt,
    /**
     * The SingleOrderItems model constructor.
     * @property {module:model/SingleOrderItems}
     */
    SingleOrderItems: SingleOrderItems,
    /**
     * The SingleOrderOptions model constructor.
     * @property {module:model/SingleOrderOptions}
     */
    SingleOrderOptions: SingleOrderOptions,
    /**
     * The SingleOrderPriceDetails model constructor.
     * @property {module:model/SingleOrderPriceDetails}
     */
    SingleOrderPriceDetails: SingleOrderPriceDetails,
    /**
     * The SingleOrderShippingMethod model constructor.
     * @property {module:model/SingleOrderShippingMethod}
     */
    SingleOrderShippingMethod: SingleOrderShippingMethod,
    /**
     * The SingleOrderTotals model constructor.
     * @property {module:model/SingleOrderTotals}
     */
    SingleOrderTotals: SingleOrderTotals,
    /**
     * The SingleOrderTotalsCustomsShippingCostsDetails model constructor.
     * @property {module:model/SingleOrderTotalsCustomsShippingCostsDetails}
     */
    SingleOrderTotalsCustomsShippingCostsDetails: SingleOrderTotalsCustomsShippingCostsDetails,
    /**
     * The SingleOrderTotalsShippingAmountDetails model constructor.
     * @property {module:model/SingleOrderTotalsShippingAmountDetails}
     */
    SingleOrderTotalsShippingAmountDetails: SingleOrderTotalsShippingAmountDetails,
    /**
     * The SingleOrderTotalsTotalAmountDetails model constructor.
     * @property {module:model/SingleOrderTotalsTotalAmountDetails}
     */
    SingleOrderTotalsTotalAmountDetails: SingleOrderTotalsTotalAmountDetails,
    /**
     * The SingleOrderValue model constructor.
     * @property {module:model/SingleOrderValue}
     */
    SingleOrderValue: SingleOrderValue,
    /**
     * The CountryApi service constructor.
     * @property {module:api/CountryApi}
     */
    CountryApi: CountryApi,
    /**
     * The OrdersApi service constructor.
     * @property {module:api/OrdersApi}
     */
    OrdersApi: OrdersApi,
    /**
     * The ProductsApi service constructor.
     * @property {module:api/ProductsApi}
     */
    ProductsApi: ProductsApi,
    /**
     * The RegionApi service constructor.
     * @property {module:api/RegionApi}
     */
    RegionApi: RegionApi,
    /**
     * The ShippingApi service constructor.
     * @property {module:api/ShippingApi}
     */
    ShippingApi: ShippingApi
  };

  return exports;
}));
